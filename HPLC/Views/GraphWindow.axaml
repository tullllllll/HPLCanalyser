<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:HPLC.ViewModels"
             xmlns:views="clr-namespace:HPLC.Views"
             x:Class="HPLC.Views.GraphWindow"
             x:DataType="vm:MainViewModel"
             xmlns:local="clr-namespace:HPLC.Helpers">
    <UserControl.Resources>
        <local:InputConverterHelper x:Key="InputConverterHelper"/>
    </UserControl.Resources>
    <DockPanel>
        <TabControl DockPanel.Dock="Top" SelectedIndex="{Binding SelectedTabIndex}" Padding="0">
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <DockPanel>
                        <!-- Tab Strip with Shadow -->
                        <Border 
                            Background="White"
                            DockPanel.Dock="Top">
                            <Border.Effect>
                                <DropShadowEffect 
                                    Color="Black"
                                    BlurRadius="10"
                                    Opacity="0.2"/>
                            </Border.Effect>
                            <ItemsPresenter 
                                Name="PART_ItemsPresenter"
                                Margin="0,0,0,0"
                                VerticalAlignment="Top"/>
                        </Border>

                        <!-- Tab Content -->
                        <ContentPresenter 
                            Name="PART_SelectedContentHost"
                            Content="{TemplateBinding SelectedContent}"/>
                    </DockPanel>
                </ControlTemplate>
            </TabControl.Template>
            <TabControl.Styles>
                <Style Selector="TabControl /template/ StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                </Style>
            </TabControl.Styles>
            <!-- Graph Viewer -->
            <TabItem Header="Graph View">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" /> 
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Panel IsVisible="{Binding GraphViewModel.IsSelectionModeActive}">
                            <Border Background="DarkRed" Opacity="0.05">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="250"></DropShadowEffect>
                                </Border.Effect>
                            </Border>
                            <TextBlock Text="Select Peaks" VerticalAlignment="Top" FontSize="30" Foreground="Coral" Opacity="1"/>
                        </Panel>
                        <views:GraphUserControl Grid.Row="0" DataContext="{Binding GraphViewModel}" x:Name="graphUserControl"/>

                        <Grid Grid.Row="1" ColumnDefinitions="Auto Auto *" Margin="10">
                            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5,0" Spacing="10">
                                <TextBlock Text="Threshold:" VerticalAlignment="Center"/>
                                <TextBox Width="100" Text="{Binding GraphViewModel.Threshold, Converter={StaticResource InputConverterHelper}, Mode=TwoWay}" MaxLength="300" />
                            </StackPanel>

                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0" Spacing="10">
                                <TextBlock Text="Min Width:" VerticalAlignment="Center"/>
                                <TextBox Width="100" Text="{Binding GraphViewModel.MinPeakWidth, Converter={StaticResource InputConverterHelper}, Mode=TwoWay, StringFormat='F1'}" MaxLength="300" />
                            </StackPanel>

                            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="4">
                                <StackPanel Orientation="Horizontal" Margin="5,0" Spacing="10">
                                    <TextBlock Text="Range baseline (Datapoints):" VerticalAlignment="Center"/>
                                    <TextBox Width="50" Text="{Binding GraphViewModel.StartpointBaseline, Converter={StaticResource InputConverterHelper}, Mode=TwoWay, StringFormat='F0'}" MaxLength="9" ToolTip.Tip="Start Point" />
                                    <TextBox Width="50" Text="{Binding GraphViewModel.EndpointBaseline, Converter={StaticResource InputConverterHelper}, Mode=TwoWay, StringFormat='F0'}" MaxLength="9" ToolTip.Tip="End Point"/>
                                </StackPanel>
                                <CheckBox IsChecked="{Binding GraphViewModel.BaseLineIsVisible}" Content="Baseline"/>
                                <CheckBox IsChecked="{Binding GraphViewModel.IsSelectionModeActive, Mode=TwoWay}" Content="Peak Creation Mode"/>
                                <Button Command="{Binding GraphViewModel.SavePeakTableCommand}" 
                                        Background="DodgerBlue" Foreground="White" 
                                        Cursor="Hand"
                                        ToolTip.Tip="Export Peak Table">
                                    <Image Height="16" Width="16" Source="avares://HPLC/Assets/export_data.png" />
                                </Button>
                                <Button Command="{Binding GraphViewModel.SaveImageCommand}" 
                                        Background="DodgerBlue" Foreground="White" 
                                        Cursor="Hand"
                                        ToolTip.Tip="Export Graph">
                                    <Image Height="16" Width="16" Source="avares://HPLC/Assets/download-image-icon.png" />
                                </Button>
                            </StackPanel>
                        </Grid>
                        
                        <!-- Expander for Peak Data -->
                        <Expander Header="Peak Data" IsExpanded="True" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <DataGrid ItemsSource="{Binding GraphViewModel.Peaks}"
                                      AutoGenerateColumns="False"
                                      GridLinesVisibility="All"
                                      BorderThickness="1"
                                      BorderBrush="Gray"
                                      HorizontalAlignment="Stretch"
                                      VerticalScrollBarVisibility="Auto"
                                      MaxHeight="300"> <!-- Set a max height to show 5 items -->
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="false" />
                                    <DataGridTextColumn Header="Start Time (min)" Binding="{Binding StartTime, StringFormat='F3'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Peak Time (min)" Binding="{Binding PeakTime, StringFormat='F3'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="End Time (min)" Binding="{Binding EndTime, StringFormat='F3'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Total Time (min)" Binding="{Binding Time, StringFormat='F3'}" IsReadOnly="true"/>
                                    <DataGridTextColumn Header="Height (µV)" Binding="{Binding PeakHeight, StringFormat='F2'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Area (µV·sec)" Binding="{Binding Area, StringFormat='F1'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Width ½ Height (min)" Binding="{Binding WidthAtHalfHeight, StringFormat='F6'}" IsReadOnly="true" />
                                    
                                    <DataGridTemplateColumn Header="Color" IsReadOnly="true">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ColorPicker Tag="{Binding Tag}" Color="{Binding Color, Mode=TwoWay}" ColorChanged="ColorView_OnColorChanged" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    
                                    <DataGridTemplateColumn Header="" IsReadOnly="true">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding $parent[DataGrid].((vm:MainViewModel)DataContext).GraphViewModel.DeletePeakCommand}"  
                                                        CommandParameter="{Binding .}"
                                                        Background="Red"
                                                        Foreground="White"
                                                        HorizontalAlignment="Stretch"
                                                        HorizontalContentAlignment="Center"
                                                        FontWeight="Bold"
                                                        Cursor="Hand">
                                                    <TextBlock>X</TextBlock>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Expander>
                    </Grid>
                    
                    <!-- Overlay if dataset is not visible -->
                    <Panel IsVisible="{Binding IsDatasetNull}">
                        <Border Background="Black" Opacity="0.4">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="250"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Button Content="Select DataSet" Command="{Binding SelectFileCommand}" 
                                CommandParameter="main" Background="DodgerBlue" Foreground="White" 
                                Margin="0,5" Cursor="Hand"
                                HorizontalAlignment="Center" FontSize="20"/>
                    </Panel>
                </Grid>
            </TabItem>

            <!-- Info tab -->
            <TabItem Header="Info">
                <ScrollViewer>
                    <StackPanel Margin="10" MaxWidth="1200">
                        <TextBlock FontWeight="Bold" FontSize="16" Text="Uitleg van de piekdetectie" Margin="0,0,0,10"/>
                        
                        <TextBlock TextWrapping="Wrap">
                            Deze pagina legt uit hoe pieken in een dataset automatisch worden gedetecteerd.
                            Het algoritme bestaat uit drie belangrijke stappen:
                        </TextBlock>
                        
                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            1. Baselinebepaling: Een lineaire baseline wordt berekend op basis van drie gemiddelde meetpunten binnen de dataset, 
                            tussen het opgegeven startpunt en eindpunt. De geselecteerde bereik wordt in drie gelijke delen opgesplitst. Uit elk 
                            deel wordt het gemiddelde genomen, en met deze drie punten wordt via lineaire regressie een rechte lijn gefit die de 
                            verwachte nulwaarde van het signaal weergeeft.
                        </TextBlock>
                        
                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            2. Piekdetectie: Het algoritme doorloopt de datapunten en controleert of een punt boven de baseline plus een ingestelde drempel 
                            (threshold) ligt. Zodra dit gebeurt, wordt een piek gestart. Een piek eindigt wanneer het signaal weer daalt tot op of onder 
                            de drempel. Alleen pieken die breder zijn dan de opgegeven minimumduur (minPeakWidth) worden als geldig beschouwd.
                        </TextBlock>
                        
                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            3. Piekanalyse: Voor elke geldige piek worden twee zaken berekend. Eerst de oppervlakte onder de piek, dit gebeurt via numerieke 
                            integratie (trapeziumregel). Vervolgens wordt de breedte op halve hoogte bepaald door aan beide zijden van de piek de punten 
                            te interpoleren waar het signaal exact de helft van de piekhoogte bereikt.
                        </TextBlock>
                        
                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,20">
                            Dit algoritme is geschikt voor het analyseren van gegevensreeksen met meerdere pieken, zoals bij chromatografie. De 
                            resultaten kunnen gebruikt worden voor verdere kwantitatieve of kwalitatieve analyse.
                        </TextBlock>

                        <!-- NIEUW GEDEELTE OVER BESTANDSVERWERKING -->
                        <TextBlock FontWeight="Bold" FontSize="16" Text="Uitleg over bestandsverwerking" Margin="0,0,0,10"/>
                        
                        <TextBlock TextWrapping="Wrap">
                            Deze applicatie laat je toe om .txt of .csv bestanden te importeren met meetgegevens uit een HPLC-analyse.
                            Het systeem herkent automatisch of het bestand afkomstig is van een Shimadzu- of Jasco-apparaat.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            Bij het openen van een bestand:
                            <LineBreak />- Wordt gezocht naar een regel die begint met "Acquired" om te bepalen of het om een Shimadzu-bestand gaat.
                            <LineBreak />- Bij Shimadzu wordt de bijbehorende datum uitgelezen en opgeslagen als analysetijd.
                            <LineBreak />- Bij Jasco wordt een standaarddatum (1-1-2000) ingesteld.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            Vervolgens zoekt het systeem naar de regel waarin "Intensity" voorkomt. Vanaf dat punt worden de gegevens 
                            geïnterpreteerd als datapunten (tijd en waarde). Deze worden automatisch geschaald en opgeslagen in een dataset.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            Let op: Alleen bestanden met twee kolommen worden geaccepteerd. Indien het bestand foutief opgebouwd is, krijg je een foutmelding.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            Ondersteunde bestandsformaten: .txt en .csv
                        </TextBlock>

                        <TextBlock FontWeight="Bold" FontSize="16" Text="Toelichting baseline" Margin="0,20,0,0"/>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            De baseline wordt vastgesteld op basis van datapunten, waarvan het aantal per minuut kan variëren. Je kunt het vergelijken met één regel in een .CSV-bestand: elke regel vertegenwoordigt één datapunt.              
                        </TextBlock>
                        
                        <Rectangle Height="1" Fill="Black" Margin="0,30,0,30"/>
                        
                        <TextBlock FontWeight="Bold" FontSize="16" Text="Explanation of Peak Detection" Margin="0,0,0,10"/>

                        <TextBlock TextWrapping="Wrap">
                            This page explains how peaks in a dataset are automatically detected.
                            The algorithm consists of three main steps:
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            1. Baseline determination: A linear baseline is calculated based on three average data points from within the dataset, 
                            between the specified start and end points. The selected range is divided into three equal segments. From each segment, 
                            the average is taken. These three values are then used to fit a straight line via linear regression, representing the expected zero level of the signal.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            2. Peak detection: The algorithm iterates through the data points and checks whether a point lies above the baseline plus a configured 
                            threshold. When this occurs, a peak is initiated. A peak ends when the signal falls back to or below the threshold. 
                            Only peaks that are wider than the specified minimum duration (minPeakWidth) are considered valid.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            3. Peak analysis: For each valid peak, two values are calculated. First, the area under the peak, determined via numerical 
                            integration (trapezoidal rule). Then, the full width at half maximum is calculated by interpolating on both sides of the peak 
                            where the signal exactly reaches half of the peak height.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,20">
                            This algorithm is suitable for analyzing data series with multiple peaks, such as in chromatography. 
                            The results can be used for further quantitative or qualitative analysis.
                        </TextBlock>

                        <!-- NEW SECTION ON FILE PROCESSING -->
                        <TextBlock FontWeight="Bold" FontSize="16" Text="Explanation of File Processing" Margin="0,0,0,10"/>

                        <TextBlock TextWrapping="Wrap">
                            This application allows you to import .txt or .csv files with measurement data from an HPLC analysis.
                            The system automatically recognizes whether the file comes from a Shimadzu or Jasco device.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            When opening a file:
                            <LineBreak />- It searches for a line starting with "Acquired" to determine if it is a Shimadzu file.
                            <LineBreak />- For Shimadzu, the corresponding date is read and saved as the analysis time.
                            <LineBreak />- For Jasco, a default date (1-1-2000) is set.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            The system then looks for the line containing "Intensity". From that point, the data is interpreted 
                            as data points (time and value). These are automatically scaled and stored in a dataset.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            Note: Only files with two columns are accepted. If the file is incorrectly formatted in any way, an error message will be displayed.
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            Supported file formats: .txt and .csv
                        </TextBlock>

                        <TextBlock FontWeight="Bold" FontSize="16" Text="Explanation of Baseline" Margin="0,20,0,0"/>

                        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                            The baseline is determined based on data points, where the number per minute may vary. 
                            You can compare it to one row in a .CSV file: each row represents one data point.
                        </TextBlock>
                    </StackPanel>

                </ScrollViewer>
            </TabItem>
            
            <!-- Settings -->
            <TabItem Header="Settings">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Datasets" FontSize="26" FontWeight="Bold" Margin="0,0,0,10" HorizontalAlignment="Center"/>
                        
                        <Grid HorizontalAlignment="Center" Width="700">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <Border Background="#F8F8F8" Padding="15" BorderBrush="#CCC" BorderThickness="1" Grid.Column="0" Margin="0,0,10,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" FontWeight="Bold" FontSize="22" Margin="0,0,0,15" HorizontalAlignment="Center" Text="Main" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Name:" Margin="0,0,10,5"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding DataSet.Name, Mode=TwoWay}" Width="120" Margin="0,0,0,5" MaxLength="40"/>
                                    
                                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Points:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding DataSet.DataPoints.Count}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Sample Date:" Margin="0,0,10,5"/>
                                    <CalendarDatePicker Grid.Row="3" Grid.Column="1" FontSize="16" VerticalAlignment="Center" SelectedDate="{Binding DataSet.Sample_Date, Mode=TwoWay}" Margin="0,0,0,5"/>

                                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Color:" Margin="0,0,10,5"/>
                                    <ColorPicker Grid.Row="4" Grid.Column="1" Tag="Main" Color="Blue" ColorChanged="ColorView_OnColorChanged" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="350"/>

                                    <Button Grid.Row="5" Grid.ColumnSpan="2" Content="Select File" Command="{Binding SelectFileCommand}" CommandParameter="main" Background="DodgerBlue" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                    <Button Grid.Row="6" Grid.ColumnSpan="2" Content="Deselect" Command="{Binding DeselectFileCommand}" CommandParameter="main" Background="Red" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                </Grid>
                            </Border>

                            <Border Background="#F8F8F8" Padding="15" BorderBrush="#CCC" BorderThickness="1" Grid.Column="1" Margin="10,0,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" FontWeight="Bold" FontSize="22" Margin="0,0,0,15" HorizontalAlignment="Center" Text="Reference" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Name:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding ReferenceDataSet.Name}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Points:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding ReferenceDataSet.DataPoints.Count}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Sample Date:" Margin="0,0,10,5"/>
                                    <CalendarDatePicker Grid.Row="3" Grid.Column="1" FontSize="16" VerticalAlignment="Center" SelectedDate="{Binding ReferenceDataSet.Sample_Date, Mode=TwoWay}" Margin="0,0,0,5"/>

                                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Color:" Margin="0,0,10,5"/>
                                    <ColorPicker Grid.Row="4" Grid.Column="1" Tag="Reference" Color="Red" ColorChanged="ColorView_OnColorChanged" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="350"/>

                                    <Button Grid.Row="5" Grid.ColumnSpan="2" Content="Select File" Command="{Binding SelectFileCommand}" CommandParameter="reference" Background="DodgerBlue" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                    <Button Grid.Row="6" Grid.ColumnSpan="2" Content="Deselect" Command="{Binding DeselectFileCommand}" CommandParameter="reference" Background="Red" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

        </TabControl>
    </DockPanel>
</UserControl>
