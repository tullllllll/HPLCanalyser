<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:HPLC.ViewModels"
             xmlns:views="clr-namespace:HPLC.Views"
             x:Class="HPLC.Views.GraphWindow"
             x:DataType="vm:MainViewModel"
             xmlns:local="clr-namespace:HPLC.Helpers">
    <UserControl.Resources>
        <local:InputConverterHelper x:Key="InputConverterHelper"/>
    </UserControl.Resources>

    <DockPanel>
        <TabControl DockPanel.Dock="Top" Margin="10" SelectedIndex="{Binding SelectedTabIndex}">
            <!-- Graph Viewer -->
            <TabItem Header="Graph View">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Graph Content -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" /> 
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <views:GraphUserControl Grid.Row="0" DataContext="{Binding GraphViewModel}" x:Name="graphUserControl"/>

                        <Grid Grid.Row="1" ColumnDefinitions="Auto Auto *" Margin="10">
                            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5,0" Spacing="10">
                                <TextBlock Text="Threshold:" VerticalAlignment="Center"/>
                                <TextBox Width="100" Text="{Binding GraphViewModel.Threshold, Converter={StaticResource InputConverterHelper}, Mode=TwoWay}" />
                            </StackPanel>

                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0" Spacing="10">
                                <TextBlock Text="Min Width:" VerticalAlignment="Center"/>
                                <TextBox Width="100" Text="{Binding GraphViewModel.MinPeakWidth, Converter={StaticResource InputConverterHelper}, Mode=TwoWay, StringFormat='F1'}" />
                            </StackPanel>

                            <Button Grid.Column="2" Command="{Binding GraphViewModel.SaveImageCommand}" 
                                    Background="DodgerBlue" Foreground="White" 
                                    Cursor="Hand" HorizontalAlignment="Right">
                                <Image Height="16" Width="16" Source="avares://HPLC/Assets/download-image-icon.png" />
                            </Button>
                        </Grid>
                        
                        <!-- Expander for Peak Data -->
                        <Expander Header="Peak Data" IsExpanded="True" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <DataGrid ItemsSource="{Binding GraphViewModel.Peaks}"
                                      AutoGenerateColumns="False"
                                      GridLinesVisibility="All"
                                      BorderThickness="1"
                                      BorderBrush="Gray"
                                      HorizontalAlignment="Stretch"
                                      VerticalScrollBarVisibility="Auto"
                                      MaxHeight="300"> <!-- Set a max height to show 5 items -->
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="false" />
                                    <DataGridTextColumn Header="Start" Binding="{Binding StartTime, StringFormat='F3'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Peak" Binding="{Binding PeakTime, StringFormat='F3'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="End" Binding="{Binding EndTime, StringFormat='F3'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Height" Binding="{Binding PeakHeight, StringFormat='F2'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Area" Binding="{Binding Area, StringFormat='F1'}" IsReadOnly="true" />
                                    <DataGridTextColumn Header="Width ½ Height" Binding="{Binding WidthAtHalfHeight, StringFormat='F6'}" IsReadOnly="true" />
                                    
                                    <DataGridTemplateColumn Header="Color" IsReadOnly="true">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ColorPicker Tag="{Binding Tag}" Color="{Binding Color, Mode=TwoWay}" ColorChanged="ColorView_OnColorChanged" HorizontalAlignment="Stretch"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    
                                    <DataGridTemplateColumn Header="" IsReadOnly="true">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding $parent[DataGrid].((vm:MainViewModel)DataContext).GraphViewModel.DeletePeakCommand}"  
                                                        CommandParameter="{Binding .}"
                                                        Background="Red"
                                                        Foreground="White"
                                                        HorizontalAlignment="Stretch"
                                                        HorizontalContentAlignment="Center"
                                                        FontWeight="Bold"
                                                        Cursor="Hand">
                                                    <TextBlock>X</TextBlock>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Expander>

                        <!-- GridSplitter to make the Expander draggable -->
                        <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ResizeBehavior="PreviousAndNext" />
                    </Grid>
                    
                    <!-- Overlay if dataset is not visible -->
                    <Panel IsVisible="{Binding IsDatasetNull}">
                        <Border Background="Black" Opacity="0.4" />
                        <Button Content="Select DataSet" Command="{Binding SelectFileCommand}" 
                                CommandParameter="main" Background="DodgerBlue" Foreground="White" 
                                Margin="0,5" Cursor="Hand"
                                HorizontalAlignment="Center" FontSize="20"/>
                    </Panel>
                </Grid>
            </TabItem>

            <!-- Info tab -->
            <TabItem Header="Info">
                <TextBlock>Info tab</TextBlock>
            </TabItem>
            
            <!-- Settings -->
            <TabItem Header="Settings">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Datasets" FontSize="26" FontWeight="Bold" Margin="0,0,0,10" HorizontalAlignment="Center"/>
                        
                        <Grid HorizontalAlignment="Center" Width="700">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <Border Background="#F8F8F8" Padding="15" BorderBrush="#CCC" BorderThickness="1" Grid.Column="0" Margin="0,0,10,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" FontWeight="Bold" FontSize="22" Margin="0,0,0,15" HorizontalAlignment="Center" Text="Main" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Name:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding DataSet.Name}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Points:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding DataSet.DataPoints.Count}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Sample Date:" Margin="0,0,10,5"/>
                                    <CalendarDatePicker Grid.Row="3" Grid.Column="1" FontSize="16" VerticalAlignment="Center" SelectedDate="{Binding DataSet.Sample_Date, Mode=TwoWay}" Margin="0,0,0,5"/>

                                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Color:" Margin="0,0,10,5"/>
                                    <ColorPicker Grid.Row="4" Grid.Column="1" Tag="Main" Color="Blue" ColorChanged="ColorView_OnColorChanged" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="350"/>

                                    <Button Grid.Row="5" Grid.ColumnSpan="2" Content="Select File" Command="{Binding SelectFileCommand}" CommandParameter="main" Background="DodgerBlue" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                    <Button Grid.Row="6" Grid.ColumnSpan="2" Content="Deselect" Command="{Binding DeselectFileCommand}" CommandParameter="main" Background="Red" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                </Grid>
                            </Border>

                            <Border Background="#F8F8F8" Padding="15" BorderBrush="#CCC" BorderThickness="1" Grid.Column="1" Margin="10,0,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" FontWeight="Bold" FontSize="22" Margin="0,0,0,15" HorizontalAlignment="Center" Text="Reference" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Name:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding ReferenceDataSet.Name}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Points:" Margin="0,0,10,5"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" FontSize="16" VerticalAlignment="Center" Text="{Binding ReferenceDataSet.DataPoints.Count}" Margin="0,0,0,5"/>
                                    
                                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Dataset Added:" Margin="0,0,10,5"/>
                                    <CalendarDatePicker Grid.Row="3" Grid.Column="1" FontSize="16" VerticalAlignment="Center" SelectedDate="{Binding ReferenceDataSet.Sample_Date, Mode=TwoWay}" Margin="0,0,0,5"/>

                                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="16" VerticalAlignment="Center" Text="Color:" Margin="0,0,10,5"/>
                                    <ColorPicker Grid.Row="4" Grid.Column="1" Tag="Reference" Color="Red" ColorChanged="ColorView_OnColorChanged" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="350"/>

                                    <Button Grid.Row="5" Grid.ColumnSpan="2" Content="Select File" Command="{Binding SelectFileCommand}" CommandParameter="reference" Background="DodgerBlue" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                    <Button Grid.Row="6" Grid.ColumnSpan="2" Content="Deselect" Command="{Binding DeselectFileCommand}" CommandParameter="reference" Background="Red" Foreground="White" Margin="0,5" HorizontalAlignment="Stretch" MaxWidth="250"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
<TabItem Header="Info">
    <ScrollViewer>
        <StackPanel Margin="10">
            <TextBlock FontWeight="Bold" FontSize="16" Text="Uitleg van de piekdetectie" Margin="0,0,0,10"/>
            
            <TextBlock TextWrapping="Wrap">
                Deze pagina legt uit hoe pieken in een dataset automatisch worden gedetecteerd met behulp van de MathService-klasse. 
                Het algoritme bestaat uit drie belangrijke stappen:
            </TextBlock>
            
            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                1. Baselinebepaling: Er wordt een lineaire baseline berekend op basis van drie gemiddelde meetpunten uit het begin van de dataset 
                (de eerste 20, daarna 30-50, en 60-80 datapunten). Met deze drie punten wordt via lineaire regressie een rechte lijn gefit, die 
                de verwachte nulwaarde van het signaal vertegenwoordigt.
            </TextBlock>
            
            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                2. Piekdetectie: Het algoritme doorloopt de datapunten en controleert of een punt boven de baseline plus een ingestelde drempel 
                (threshold) ligt. Zodra dit gebeurt, wordt een piek gestart. Een piek eindigt wanneer het signaal weer daalt tot op of onder 
                de drempel. Alleen pieken die breder zijn dan de opgegeven minimumduur (minPeakWidth) worden als geldig beschouwd.
            </TextBlock>
            
            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                3. Piekanalyse: Voor elke geldige piek worden twee zaken berekend. Eerst de oppervlakte onder de piek, dit gebeurt via numerieke 
                integratie (trapeziumregel). Vervolgens wordt de breedte op halve hoogte bepaald door aan beide zijden van de piek de punten 
                te interpoleren waar het signaal exact de helft van de piekhoogte bereikt.
            </TextBlock>
            
            <TextBlock TextWrapping="Wrap" Margin="0,10,0,20">
                Dit algoritme is geschikt voor het analyseren van gegevensreeksen met meerdere pieken, zoals bij chromatografie. De 
                resultaten kunnen gebruikt worden voor verdere kwantitatieve of kwalitatieve analyse.
            </TextBlock>

            <!-- NIEUW GEDEELTE OVER BESTANDSVERWERKING -->
            <TextBlock FontWeight="Bold" FontSize="16" Text="Uitleg over bestandsverwerking" Margin="0,0,0,10"/>
            
            <TextBlock TextWrapping="Wrap">
                Deze applicatie laat je toe om .txt of .csv bestanden te importeren met meetgegevens uit een HPLC-analyse.
                Het systeem herkent automatisch of het bestand afkomstig is van een Shimadzu- of Jasco-apparaat.
            </TextBlock>

            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                Bij het openen van een bestand:
                - Wordt gezocht naar een regel die begint met "Acquired" om te bepalen of het om een Shimadzu-bestand gaat.
                - Bij Shimadzu wordt de bijbehorende datum uitgelezen en opgeslagen als analysetijd.
                - Bij Jasco wordt een standaarddatum (1-1-2000) ingesteld.
            </TextBlock>

            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                Vervolgens zoekt het systeem naar de regel waarin "Intensity" voorkomt. Vanaf dat punt worden de gegevens 
                geïnterpreteerd als datapunten (tijd en waarde). Deze worden automatisch geschaald en opgeslagen in een dataset.
            </TextBlock>

            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                Let op: Alleen bestanden met twee kolommen worden geaccepteerd. Indien het bestand foutief opgebouwd is, krijg je een foutmelding.
            </TextBlock>

            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
                Ondersteunde bestandsformaten: .txt en .csv
            </TextBlock>

        </StackPanel>
    </ScrollViewer>
</TabItem>

        </TabControl>
    </DockPanel>
</UserControl>
